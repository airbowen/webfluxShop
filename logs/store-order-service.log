2025-07-11 11:14:41 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 53644 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 11:14:41 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 5 JPA repository interfaces.
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:14:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 11:14:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 11:14:41 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 11:14:41 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 11:14:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 11:14:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 859 ms
2025-07-11 11:14:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 11:14:43 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'192.168.65.1' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:283)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.store.StoreApplication.main(StoreApplication.java:12)
2025-07-11 11:14:43 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: java.sql.SQLException: Access denied for user 'root'@'192.168.65.1' (using password: YES)
2025-07-11 11:14:43 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-11 11:14:43 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-11 11:14:43 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: java.sql.SQLException: Access denied for user 'root'@'192.168.65.1' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.store.StoreApplication.main(StoreApplication.java:12)
Caused by: liquibase.exception.DatabaseException: java.sql.SQLException: Access denied for user 'root'@'192.168.65.1' (using password: YES)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'192.168.65.1' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:283)
	... 20 common frames omitted
2025-07-11 11:31:42 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 57916 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 11:31:42 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 5 JPA repository interfaces.
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:31:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 11:31:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 11:31:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 11:31:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 11:31:43 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 11:31:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 725 ms
2025-07-11 11:31:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 11:31:44 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:175)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:283)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.store.StoreApplication.main(StoreApplication.java:12)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:166)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:121)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:945)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	... 31 common frames omitted
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:153)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 34 common frames omitted
2025-07-11 11:31:44 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2025-07-11 11:31:44 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-11 11:31:44 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-11 11:31:44 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.store.StoreApplication.main(StoreApplication.java:12)
Caused by: liquibase.exception.DatabaseException: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 18 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:175)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:283)
	... 20 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:166)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:121)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:945)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	... 31 common frames omitted
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:153)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 34 common frames omitted
2025-07-11 11:34:09 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 58768 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 11:34:09 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:34:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 11:34:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 11:34:10 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 11:34:10 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 11:34:10 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 11:34:10 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 819 ms
2025-07-11 11:34:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 11:34:11 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'192.168.65.1' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:283)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.store.StoreApplication.main(StoreApplication.java:12)
2025-07-11 11:34:11 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: java.sql.SQLException: Access denied for user 'root'@'192.168.65.1' (using password: YES)
2025-07-11 11:34:11 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-11 11:34:11 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-11 11:34:11 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: java.sql.SQLException: Access denied for user 'root'@'192.168.65.1' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.store.StoreApplication.main(StoreApplication.java:12)
Caused by: liquibase.exception.DatabaseException: java.sql.SQLException: Access denied for user 'root'@'192.168.65.1' (using password: YES)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'192.168.65.1' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:283)
	... 20 common frames omitted
2025-07-11 11:35:04 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 59292 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 11:35:04 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 11:35:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 11:35:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 11:35:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
2025-07-11 11:35:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 11:35:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 11:35:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:35:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:35:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:35:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:35:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:35:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 11:35:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 11:35:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 11:35:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 11:35:05 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 11:35:05 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 832 ms
2025-07-11 11:35:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 11:35:05 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b7ab7ab
2025-07-11 11:35:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 11:35:05 [main] INFO  liquibase.changelog - Creating database history table with name: store_db.DATABASECHANGELOG
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 11:35:11 [main] WARN  liquibase.executor - Integer display width is deprecated and will be removed in a future release.
2025-07-11 11:35:11 [main] INFO  liquibase.lockservice - Successfully acquired change log lock
2025-07-11 11:35:11 [main] INFO  liquibase.command - Using deploymentId: 2204911158
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Table user created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_user_login_name created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - ChangeSet db/changelog/changes/001-create-user-table.xml::001-create-user-table::store-system ran successfully in 28ms
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Table merchant created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_merchant_status created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - ChangeSet db/changelog/changes/002-create-merchant-table.xml::002-create-merchant-table::store-system ran successfully in 19ms
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Table product created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Foreign key constraint added to product (merchant_id)
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_product_merchant_id created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_product_status created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - ChangeSet db/changelog/changes/003-create-product-table.xml::003-create-product-table::store-system ran successfully in 47ms
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Table order created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Foreign key constraint added to order (user_id)
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Foreign key constraint added to order (merchant_id)
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_order_order_code created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_order_user_id created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_order_merchant_id created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_order_status created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - ChangeSet db/changelog/changes/004-create-order-table.xml::004-create-order-table::store-system ran successfully in 91ms
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Table order_item created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Foreign key constraint added to order_item (order_id)
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Foreign key constraint added to order_item (product_id)
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_order_item_order_id created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_order_item_product_id created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - ChangeSet db/changelog/changes/005-create-order-item-table.xml::005-create-order-item-table::store-system ran successfully in 63ms
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Table order_message created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_order_message_status created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_order_message_topic created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - Index idx_order_message_create_time created
2025-07-11 11:35:11 [main] INFO  liquibase.changelog - ChangeSet db/changelog/changes/006-create-order-message-table.xml::006-create-order-message-table::store-system ran successfully in 34ms
2025-07-11 11:35:11 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 11:35:11 [main] INFO  liquibase.util - Run:                          6
2025-07-11 11:35:11 [main] INFO  liquibase.util - Previously run:               0
2025-07-11 11:35:11 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 11:35:11 [main] INFO  liquibase.util - -------------------------------
2025-07-11 11:35:11 [main] INFO  liquibase.util - Total change sets:            6
2025-07-11 11:35:11 [main] INFO  liquibase.util - Update summary generated
2025-07-11 11:35:11 [main] INFO  liquibase.command - Update command completed successfully.
2025-07-11 11:35:11 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 11:35:11 [main] INFO  liquibase.command - Command execution complete
2025-07-11 11:35:11 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 11:35:11 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 11:35:11 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 11:35:11 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 11:35:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 11:35:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 11:35:12 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 11:35:12 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 11:35:12 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 11:35:12 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 11:35:13 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 11:35:13 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 11:35:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 11:35:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 11:35:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752204913211
2025-07-11 11:35:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 11:35:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 11:35:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 11:35:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 11:35:13 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-07-11 11:35:13 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 11:35:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 11:35:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 11:35:13 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-11 11:35:13 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-11 11:55:26 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 64600 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 11:55:26 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 5 JPA repository interfaces.
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 11:55:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 11:55:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 11:55:26 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 11:55:26 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 11:55:26 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 11:55:26 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 715 ms
2025-07-11 11:55:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 11:55:27 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c9372ed
2025-07-11 11:55:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 11:55:32 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 11:55:32 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 11:55:32 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 11:55:32 [main] INFO  liquibase.util - Run:                          0
2025-07-11 11:55:32 [main] INFO  liquibase.util - Previously run:               6
2025-07-11 11:55:32 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 11:55:32 [main] INFO  liquibase.util - -------------------------------
2025-07-11 11:55:32 [main] INFO  liquibase.util - Total change sets:            6
2025-07-11 11:55:32 [main] INFO  liquibase.util - Update summary generated
2025-07-11 11:55:32 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 11:55:32 [main] INFO  liquibase.command - Command execution complete
2025-07-11 11:55:32 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 11:55:32 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 11:55:32 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 11:55:32 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 11:55:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 11:55:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 11:55:32 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 11:55:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 11:55:33 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 11:55:33 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 11:55:33 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 11:55:33 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 11:55:33 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 11:55:33 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 11:55:33 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752206133982
2025-07-11 11:55:34 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 11:55:34 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 11:55:34 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 11:55:34 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 11:55:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 11:55:34 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.057 seconds (process running for 8.183)
2025-07-11 11:55:34 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 11:55:34 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 11:55:34 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 11:55:34 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 11:55:34 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 11:55:34 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 11:55:42 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 11:55:42 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 11:55:42 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-11 11:57:18 [http-nio-8080-exec-3] ERROR com.store.util.JwtUtil - Token validation failed: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
2025-07-11 11:57:18 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Invalid or expired token] with root cause
java.lang.IllegalArgumentException: Invalid or expired token
	at com.store.controller.OrderController.extractUserIdFromToken(OrderController.java:104)
	at com.store.controller.OrderController.createOrder(OrderController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-07-11 11:57:45 [http-nio-8080-exec-7] ERROR com.store.util.JwtUtil - Token validation failed: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
2025-07-11 11:57:45 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Invalid or expired token] with root cause
java.lang.IllegalArgumentException: Invalid or expired token
	at com.store.controller.OrderController.extractUserIdFromToken(OrderController.java:104)
	at com.store.controller.OrderController.createOrder(OrderController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-07-11 12:00:04 [http-nio-8080-exec-2] ERROR com.store.util.JwtUtil - Token validation failed: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
2025-07-11 12:00:04 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Invalid or expired token] with root cause
java.lang.IllegalArgumentException: Invalid or expired token
	at com.store.controller.OrderController.extractUserIdFromToken(OrderController.java:104)
	at com.store.controller.OrderController.createOrder(OrderController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-07-11 12:00:34 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:00:34 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:00:34 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:04:16 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:04:16 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 12:04:16 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 12:04:20 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 68443 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 12:04:20 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 5 JPA repository interfaces.
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:04:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 12:04:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 12:04:21 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 12:04:21 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 12:04:21 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 12:04:21 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 762 ms
2025-07-11 12:04:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 12:04:21 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c9372ed
2025-07-11 12:04:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 12:04:27 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:04:27 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:04:27 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 12:04:27 [main] INFO  liquibase.util - Run:                          0
2025-07-11 12:04:27 [main] INFO  liquibase.util - Previously run:               6
2025-07-11 12:04:27 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 12:04:27 [main] INFO  liquibase.util - -------------------------------
2025-07-11 12:04:27 [main] INFO  liquibase.util - Total change sets:            6
2025-07-11 12:04:27 [main] INFO  liquibase.util - Update summary generated
2025-07-11 12:04:27 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 12:04:27 [main] INFO  liquibase.command - Command execution complete
2025-07-11 12:04:27 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 12:04:27 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 12:04:27 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 12:04:27 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 12:04:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 12:04:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 12:04:27 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 12:04:27 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:04:27 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 12:04:28 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 12:04:28 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 12:04:28 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 12:04:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 12:04:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 12:04:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752206668865
2025-07-11 12:04:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 12:04:29 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 12:04:29 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 12:04:29 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 12:04:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 12:04:29 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.449 seconds (process running for 8.584)
2025-07-11 12:04:29 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:04:29 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:04:29 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:04:29 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 12:04:29 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 12:04:29 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 12:04:32 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 12:04:32 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 12:04:32 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-11 12:04:41 [http-nio-8080-exec-2] INFO  c.store.controller.OrderController - Creating order for user: 1
2025-07-11 12:04:41 [http-nio-8080-exec-2] INFO  com.store.service.OrderService - Creating order for user: 1
2025-07-11 12:04:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:04:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:04:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:04:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 12:04:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:04:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        
    order (create_time, logistics_company, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 12:04:41 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1064, SQLState: 42000
2025-07-11 12:04:41 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (create_time,logistics_company,merchant_id,order_code,pay_time,status,tota' at line 1
2025-07-11 12:04:41 [http-nio-8080-exec-2] ERROR c.store.controller.OrderController - Failed to create order: could not execute statement [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (create_time,logistics_company,merchant_id,order_code,pay_time,status,tota' at line 1] [/* insert for com.store.entity.OrderEntity */insert into order (create_time,logistics_company,merchant_id,order_code,pay_time,status,total_amount,tracking_no,user_id) values (?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.store.entity.OrderEntity */insert into order (create_time,logistics_company,merchant_id,order_code,pay_time,status,total_amount,tracking_no,user_id) values (?,?,?,?,?,?,?,?,?)]
2025-07-11 12:05:23 [http-nio-8080-exec-8] INFO  c.store.controller.OrderController - Getting orders for user: 1
2025-07-11 12:05:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        o 
    FROM
        OrderEntity o 
    WHERE
        o.userId = :userId 
    ORDER BY
        o.createTime DESC */ select
            oe1_0.id,
            oe1_0.create_time,
            oe1_0.logistics_company,
            oe1_0.merchant_id,
            oe1_0.order_code,
            oe1_0.pay_time,
            oe1_0.status,
            oe1_0.total_amount,
            oe1_0.tracking_no,
            oe1_0.user_id 
        from
            
        order oe1_0 where
            oe1_0.user_id=? 
        order by
            oe1_0.create_time desc
2025-07-11 12:05:23 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1064, SQLState: 42000
2025-07-11 12:05:23 [http-nio-8080-exec-8] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order oe1_0 where oe1_0.user_id=1 order by oe1_0.create_time desc' at line 1
2025-07-11 12:05:23 [http-nio-8080-exec-8] ERROR c.store.controller.OrderController - Failed to get user orders: JDBC exception executing SQL [/* SELECT o FROM OrderEntity o WHERE o.userId = :userId ORDER BY o.createTime DESC */ select oe1_0.id,oe1_0.create_time,oe1_0.logistics_company,oe1_0.merchant_id,oe1_0.order_code,oe1_0.pay_time,oe1_0.status,oe1_0.total_amount,oe1_0.tracking_no,oe1_0.user_id from order oe1_0 where oe1_0.user_id=? order by oe1_0.create_time desc] [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order oe1_0 where oe1_0.user_id=1 order by oe1_0.create_time desc' at line 1] [n/a]; SQL [n/a]
2025-07-11 12:05:31 [http-nio-8080-exec-9] INFO  c.store.controller.OrderController - Getting orders for user: 1
2025-07-11 12:05:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        o 
    FROM
        OrderEntity o 
    WHERE
        o.userId = :userId 
    ORDER BY
        o.createTime DESC */ select
            oe1_0.id,
            oe1_0.create_time,
            oe1_0.logistics_company,
            oe1_0.merchant_id,
            oe1_0.order_code,
            oe1_0.pay_time,
            oe1_0.status,
            oe1_0.total_amount,
            oe1_0.tracking_no,
            oe1_0.user_id 
        from
            
        order oe1_0 where
            oe1_0.user_id=? 
        order by
            oe1_0.create_time desc
2025-07-11 12:05:31 [http-nio-8080-exec-9] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1064, SQLState: 42000
2025-07-11 12:05:31 [http-nio-8080-exec-9] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order oe1_0 where oe1_0.user_id=1 order by oe1_0.create_time desc' at line 1
2025-07-11 12:05:31 [http-nio-8080-exec-9] ERROR c.store.controller.OrderController - Failed to get user orders: JDBC exception executing SQL [/* SELECT o FROM OrderEntity o WHERE o.userId = :userId ORDER BY o.createTime DESC */ select oe1_0.id,oe1_0.create_time,oe1_0.logistics_company,oe1_0.merchant_id,oe1_0.order_code,oe1_0.pay_time,oe1_0.status,oe1_0.total_amount,oe1_0.tracking_no,oe1_0.user_id from order oe1_0 where oe1_0.user_id=? order by oe1_0.create_time desc] [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order oe1_0 where oe1_0.user_id=1 order by oe1_0.create_time desc' at line 1] [n/a]; SQL [n/a]
2025-07-11 12:05:56 [http-nio-8080-exec-7] INFO  c.store.controller.OrderController - Creating order for user: 1
2025-07-11 12:05:56 [http-nio-8080-exec-7] INFO  com.store.service.OrderService - Creating order for user: 1
2025-07-11 12:05:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:05:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:05:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:05:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 12:05:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:05:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        
    order (create_time, logistics_company, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 12:05:56 [http-nio-8080-exec-7] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1064, SQLState: 42000
2025-07-11 12:05:56 [http-nio-8080-exec-7] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (create_time,logistics_company,merchant_id,order_code,pay_time,status,tota' at line 1
2025-07-11 12:05:56 [http-nio-8080-exec-7] ERROR c.store.controller.OrderController - Failed to create order: could not execute statement [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (create_time,logistics_company,merchant_id,order_code,pay_time,status,tota' at line 1] [/* insert for com.store.entity.OrderEntity */insert into order (create_time,logistics_company,merchant_id,order_code,pay_time,status,total_amount,tracking_no,user_id) values (?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.store.entity.OrderEntity */insert into order (create_time,logistics_company,merchant_id,order_code,pay_time,status,total_amount,tracking_no,user_id) values (?,?,?,?,?,?,?,?,?)]
2025-07-11 12:06:51 [http-nio-8080-exec-3] INFO  c.store.controller.OrderController - Creating order for user: 1
2025-07-11 12:06:51 [http-nio-8080-exec-3] INFO  com.store.service.OrderService - Creating order for user: 1
2025-07-11 12:06:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:06:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:06:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:06:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 12:06:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:06:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        
    order (create_time, logistics_company, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 12:06:51 [http-nio-8080-exec-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1064, SQLState: 42000
2025-07-11 12:06:51 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (create_time,logistics_company,merchant_id,order_code,pay_time,status,tota' at line 1
2025-07-11 12:06:51 [http-nio-8080-exec-3] ERROR c.store.controller.OrderController - Failed to create order: could not execute statement [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (create_time,logistics_company,merchant_id,order_code,pay_time,status,tota' at line 1] [/* insert for com.store.entity.OrderEntity */insert into order (create_time,logistics_company,merchant_id,order_code,pay_time,status,total_amount,tracking_no,user_id) values (?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.store.entity.OrderEntity */insert into order (create_time,logistics_company,merchant_id,order_code,pay_time,status,total_amount,tracking_no,user_id) values (?,?,?,?,?,?,?,?,?)]
2025-07-11 12:08:26 [http-nio-8080-exec-4] INFO  c.store.controller.OrderController - Creating order for user: 1
2025-07-11 12:08:26 [http-nio-8080-exec-4] INFO  com.store.service.OrderService - Creating order for user: 1
2025-07-11 12:08:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:08:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:08:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:08:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 12:08:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:08:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        
    order (create_time, logistics_company, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 12:08:26 [http-nio-8080-exec-4] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1064, SQLState: 42000
2025-07-11 12:08:26 [http-nio-8080-exec-4] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (create_time,logistics_company,merchant_id,order_code,pay_time,status,tota' at line 1
2025-07-11 12:08:26 [http-nio-8080-exec-4] ERROR c.store.controller.OrderController - Failed to create order: could not execute statement [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (create_time,logistics_company,merchant_id,order_code,pay_time,status,tota' at line 1] [/* insert for com.store.entity.OrderEntity */insert into order (create_time,logistics_company,merchant_id,order_code,pay_time,status,total_amount,tracking_no,user_id) values (?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.store.entity.OrderEntity */insert into order (create_time,logistics_company,merchant_id,order_code,pay_time,status,total_amount,tracking_no,user_id) values (?,?,?,?,?,?,?,?,?)]
2025-07-11 12:08:34 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:08:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 12:08:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 12:08:39 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 71949 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 12:08:39 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 5 JPA repository interfaces.
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:08:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 12:08:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 12:08:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 12:08:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 12:08:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 12:08:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 784 ms
2025-07-11 12:08:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 12:08:40 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d126083
2025-07-11 12:08:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 12:08:46 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:08:46 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:08:46 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 12:08:46 [main] INFO  liquibase.util - Run:                          0
2025-07-11 12:08:46 [main] INFO  liquibase.util - Previously run:               6
2025-07-11 12:08:46 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 12:08:46 [main] INFO  liquibase.util - -------------------------------
2025-07-11 12:08:46 [main] INFO  liquibase.util - Total change sets:            6
2025-07-11 12:08:46 [main] INFO  liquibase.util - Update summary generated
2025-07-11 12:08:46 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 12:08:46 [main] INFO  liquibase.command - Command execution complete
2025-07-11 12:08:46 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 12:08:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 12:08:46 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 12:08:46 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 12:08:46 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 12:08:46 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 12:08:46 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 12:08:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:08:47 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 12:08:47 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 12:08:47 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 12:08:47 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 12:08:47 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 12:08:47 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 12:08:47 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752206927986
2025-07-11 12:08:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 12:08:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 12:08:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 12:08:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 12:08:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 12:08:48 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.452 seconds (process running for 8.589)
2025-07-11 12:08:48 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:08:48 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:08:48 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:08:48 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 12:08:48 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 12:08:48 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 12:08:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 12:08:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 12:08:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-11 12:10:03 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:10:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 12:10:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 12:10:06 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 72397 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 12:10:06 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 5 JPA repository interfaces.
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 12:10:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 12:10:06 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 12:10:06 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 12:10:06 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 12:10:06 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 684 ms
2025-07-11 12:10:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 12:10:07 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@20a9f5fb
2025-07-11 12:10:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 12:10:12 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:10:12 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:10:12 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 12:10:12 [main] INFO  liquibase.util - Run:                          0
2025-07-11 12:10:12 [main] INFO  liquibase.util - Previously run:               6
2025-07-11 12:10:12 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 12:10:12 [main] INFO  liquibase.util - -------------------------------
2025-07-11 12:10:12 [main] INFO  liquibase.util - Total change sets:            6
2025-07-11 12:10:12 [main] INFO  liquibase.util - Update summary generated
2025-07-11 12:10:12 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 12:10:12 [main] INFO  liquibase.command - Command execution complete
2025-07-11 12:10:12 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 12:10:12 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 12:10:12 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 12:10:12 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 12:10:12 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 12:10:12 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 12:10:12 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 12:10:12 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:10:13 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 12:10:13 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 12:10:13 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 12:10:13 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 12:10:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 12:10:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 12:10:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752207013989
2025-07-11 12:10:14 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 12:10:14 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 12:10:14 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 12:10:14 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 12:10:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 12:10:14 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.029 seconds (process running for 8.145)
2025-07-11 12:10:14 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:10:14 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:10:14 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:10:14 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 12:10:14 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 12:10:14 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 12:10:22 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 12:10:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 12:10:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-11 12:11:06 [http-nio-8080-exec-6] INFO  c.store.controller.OrderController - Creating order for user: 1
2025-07-11 12:11:06 [http-nio-8080-exec-6] INFO  com.store.service.OrderService - Creating order for user: 1
2025-07-11 12:11:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:11:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:11:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:11:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 12:11:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:11:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        `order` (
            create_time, logistics_company, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id
        ) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 12:11:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 12:11:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 12:11:07 [http-nio-8080-exec-6] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 10
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 1000
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-07-11 12:11:07 [http-nio-8080-exec-6] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-07-11 12:11:07 [http-nio-8080-exec-6] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 12:11:07 [http-nio-8080-exec-6] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 12:11:07 [http-nio-8080-exec-6] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752207067179
2025-07-11 12:11:07 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: LP5EO4VfSnyZgbfCYGNwrg
2025-07-11 12:11:07 [http-nio-8080-exec-6] INFO  com.store.service.OrderService - Order created successfully: ORD598727949344182272
2025-07-11 12:11:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 12:11:07 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
2025-07-11 12:11:07 [kafka-producer-network-thread | producer-1] INFO  com.store.service.OrderService - Order created message sent successfully: ORD598727949344182272
2025-07-11 12:13:58 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-07-11 12:13:58 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 12:13:58 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 12:13:58 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 12:13:58 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-07-11 12:13:58 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:13:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 12:13:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 12:14:03 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 73784 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 12:14:03 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 5 JPA repository interfaces.
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 12:14:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 12:14:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 12:14:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 12:14:04 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 12:14:04 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 740 ms
2025-07-11 12:14:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 12:14:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c9372ed
2025-07-11 12:14:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 12:14:09 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:14:09 [main] INFO  liquibase.lockservice - Successfully acquired change log lock
2025-07-11 12:14:09 [main] INFO  liquibase.command - Using deploymentId: 2207249828
2025-07-11 12:14:09 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:14:09 [main] INFO  liquibase.changelog - Column order.pay_time dropped
2025-07-11 12:14:09 [main] INFO  liquibase.changelog - Column order.logistics_company dropped
2025-07-11 12:14:09 [main] INFO  liquibase.changelog - ChangeSet db/changelog/changes/007-remove-pay-time-and-logistics-company.xml::007-remove-pay-time-and-logistics-company::store-system ran successfully in 33ms
2025-07-11 12:14:09 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 12:14:09 [main] INFO  liquibase.util - Run:                          1
2025-07-11 12:14:09 [main] INFO  liquibase.util - Previously run:               6
2025-07-11 12:14:09 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 12:14:09 [main] INFO  liquibase.util - -------------------------------
2025-07-11 12:14:09 [main] INFO  liquibase.util - Total change sets:            7
2025-07-11 12:14:09 [main] INFO  liquibase.util - Update summary generated
2025-07-11 12:14:09 [main] INFO  liquibase.command - Update command completed successfully.
2025-07-11 12:14:09 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 12:14:09 [main] INFO  liquibase.command - Command execution complete
2025-07-11 12:14:09 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 12:14:09 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 12:14:09 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 12:14:10 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 12:14:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 12:14:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 12:14:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 12:14:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:14:10 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 12:14:11 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 12:14:11 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 12:14:11 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 12:14:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 12:14:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 12:14:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752207251640
2025-07-11 12:14:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 12:14:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 12:14:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 12:14:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 12:14:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 12:14:11 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.501 seconds (process running for 8.626)
2025-07-11 12:14:11 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:14:11 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:14:11 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:14:11 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 12:14:11 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 12:14:11 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 12:14:12 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 12:14:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 12:14:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-11 12:16:32 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 74722 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 12:16:32 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 5 JPA repository interfaces.
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:16:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 12:16:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 12:16:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 12:16:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 12:16:33 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 12:16:33 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 673 ms
2025-07-11 12:16:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 12:16:33 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@71a2df1
2025-07-11 12:16:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 12:16:38 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:16:38 [main] INFO  liquibase.lockservice - Successfully acquired change log lock
2025-07-11 12:16:38 [main] INFO  liquibase.command - Using deploymentId: 2207398864
2025-07-11 12:16:38 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:16:38 [main] INFO  liquibase.changelog - Columns pay_time(TIMESTAMP) added to order
2025-07-11 12:16:38 [main] INFO  liquibase.changelog - ChangeSet db/changelog/changes/008-add-back-pay-time.xml::008-add-back-pay-time::store-system ran successfully in 24ms
2025-07-11 12:16:38 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 12:16:38 [main] INFO  liquibase.util - Run:                          1
2025-07-11 12:16:38 [main] INFO  liquibase.util - Previously run:               7
2025-07-11 12:16:38 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 12:16:38 [main] INFO  liquibase.util - -------------------------------
2025-07-11 12:16:38 [main] INFO  liquibase.util - Total change sets:            8
2025-07-11 12:16:38 [main] INFO  liquibase.util - Update summary generated
2025-07-11 12:16:38 [main] INFO  liquibase.command - Update command completed successfully.
2025-07-11 12:16:38 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 12:16:38 [main] INFO  liquibase.command - Command execution complete
2025-07-11 12:16:38 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 12:16:38 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 12:16:38 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 12:16:39 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 12:16:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 12:16:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 12:16:39 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 12:16:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:16:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 12:16:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 12:16:40 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 12:16:40 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 12:16:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 12:16:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 12:16:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752207400366
2025-07-11 12:16:40 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 12:16:40 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 12:16:40 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 12:16:40 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 12:16:40 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-07-11 12:16:40 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:16:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 12:16:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 12:16:40 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-11 12:16:40 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-11 12:17:06 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:17:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 12:17:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 12:17:27 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 75291 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 12:17:27 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 12:17:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:17:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 12:17:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
2025-07-11 12:17:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 12:17:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 12:17:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:17:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:17:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:17:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:17:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 12:17:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 12:17:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 12:17:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 12:17:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 12:17:28 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 12:17:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 824 ms
2025-07-11 12:17:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 12:17:28 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d977a20
2025-07-11 12:17:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 12:17:34 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:17:34 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 12:17:34 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 12:17:34 [main] INFO  liquibase.util - Run:                          0
2025-07-11 12:17:34 [main] INFO  liquibase.util - Previously run:               8
2025-07-11 12:17:34 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 12:17:34 [main] INFO  liquibase.util - -------------------------------
2025-07-11 12:17:34 [main] INFO  liquibase.util - Total change sets:            8
2025-07-11 12:17:34 [main] INFO  liquibase.util - Update summary generated
2025-07-11 12:17:34 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 12:17:34 [main] INFO  liquibase.command - Command execution complete
2025-07-11 12:17:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 12:17:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 12:17:34 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 12:17:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 12:17:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 12:17:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 12:17:34 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 12:17:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 12:17:34 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 12:17:35 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 12:17:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 12:17:35 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 12:17:35 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 12:17:35 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 12:17:35 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752207455901
2025-07-11 12:17:36 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 12:17:36 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 12:17:36 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 12:17:36 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 12:17:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 12:17:36 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.691 seconds (process running for 8.845)
2025-07-11 12:17:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:17:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:17:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:17:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 12:17:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 12:17:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 12:17:42 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 12:17:42 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 12:17:42 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2025-07-11 12:22:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:22:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:22:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:27:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:27:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:27:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:27:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 12:27:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 12:27:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 12:27:38 [http-nio-8080-exec-1] INFO  c.store.controller.OrderController - Creating order for user: 1
2025-07-11 12:27:38 [http-nio-8080-exec-1] INFO  com.store.service.OrderService - Creating order for user: 1
2025-07-11 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        `order` (
            create_time, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id
        ) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 12:27:38 [http-nio-8080-exec-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 10
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 1000
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-07-11 12:27:38 [http-nio-8080-exec-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-07-11 12:27:38 [http-nio-8080-exec-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 12:27:38 [http-nio-8080-exec-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 12:27:38 [http-nio-8080-exec-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752208058535
2025-07-11 12:27:38 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: LP5EO4VfSnyZgbfCYGNwrg
2025-07-11 12:27:38 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1 with epoch 0
2025-07-11 12:27:38 [http-nio-8080-exec-1] INFO  com.store.service.OrderService - Order created successfully: ORD598732107140960256
2025-07-11 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 12:27:38 [kafka-producer-network-thread | producer-1] INFO  com.store.service.OrderService - Order created message sent successfully: ORD598732107140960256
2025-07-11 12:29:02 [http-nio-8080-exec-3] INFO  c.store.controller.PaymentController - Processing payment for order: ORD598732107140960256
2025-07-11 12:29:02 [http-nio-8080-exec-3] INFO  com.store.service.PaymentService - Processing payment for order: ORD598732107140960256
2025-07-11 12:29:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 12:29:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 5 : {payment-processed=LEADER_NOT_AVAILABLE}
2025-07-11 12:29:04 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order-created-0 to 0 since the associated topicId changed from null to vXFwNEruT_2-kNwJgDpT1Q
2025-07-11 12:29:04 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order-created-2 to 0 since the associated topicId changed from null to vXFwNEruT_2-kNwJgDpT1Q
2025-07-11 12:29:04 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order-created-1 to 0 since the associated topicId changed from null to vXFwNEruT_2-kNwJgDpT1Q
2025-07-11 12:29:04 [http-nio-8080-exec-3] INFO  com.store.service.PaymentService - Payment processed successfully for order: ORD598732107140960256
2025-07-11 12:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.OrderEntity */update `order` 
    set
        create_time=?,
        merchant_id=?,
        order_code=?,
        pay_time=?,
        status=?,
        total_amount=?,
        tracking_no=?,
        user_id=? 
    where
        id=?
2025-07-11 12:29:04 [kafka-producer-network-thread | producer-1] INFO  com.store.service.PaymentService - Payment event sent successfully to topic: payment-processed
2025-07-11 12:29:39 [http-nio-8080-exec-9] INFO  c.store.controller.OrderController - Getting orders for user: 1
2025-07-11 12:29:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        o 
    FROM
        OrderEntity o 
    WHERE
        o.userId = :userId 
    ORDER BY
        o.createTime DESC */ select
            oe1_0.id,
            oe1_0.create_time,
            oe1_0.merchant_id,
            oe1_0.order_code,
            oe1_0.pay_time,
            oe1_0.status,
            oe1_0.total_amount,
            oe1_0.tracking_no,
            oe1_0.user_id 
        from
            `order` oe1_0 
        where
            oe1_0.user_id=? 
        order by
            oe1_0.create_time desc
2025-07-11 12:29:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 12:29:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oie1_0.id,
        oie1_0.order_id,
        oie1_0.price,
        oie1_0.product_id,
        oie1_0.quantity,
        oie1_0.refund_status 
    from
        order_item oie1_0 
    where
        oie1_0.order_id=?
2025-07-11 12:29:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        pe1_0.id,
        pe1_0.create_time,
        pe1_0.merchant_id,
        pe1_0.name,
        pe1_0.pic,
        pe1_0.price,
        pe1_0.status,
        pe1_0.stock,
        pe1_0.version 
    from
        product pe1_0 
    where
        pe1_0.id in (?, ?)
2025-07-11 12:29:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 12:29:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oie1_0.id,
        oie1_0.order_id,
        oie1_0.price,
        oie1_0.product_id,
        oie1_0.quantity,
        oie1_0.refund_status 
    from
        order_item oie1_0 
    where
        oie1_0.order_id=?
2025-07-11 12:29:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        pe1_0.id,
        pe1_0.create_time,
        pe1_0.merchant_id,
        pe1_0.name,
        pe1_0.pic,
        pe1_0.price,
        pe1_0.status,
        pe1_0.stock,
        pe1_0.version 
    from
        product pe1_0 
    where
        pe1_0.id in (?, ?)
2025-07-11 12:30:08 [http-nio-8080-exec-3] INFO  c.store.controller.OrderController - Getting orders for user: 1
2025-07-11 12:30:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        o 
    FROM
        OrderEntity o 
    WHERE
        o.userId = :userId 
    ORDER BY
        o.createTime DESC */ select
            oe1_0.id,
            oe1_0.create_time,
            oe1_0.merchant_id,
            oe1_0.order_code,
            oe1_0.pay_time,
            oe1_0.status,
            oe1_0.total_amount,
            oe1_0.tracking_no,
            oe1_0.user_id 
        from
            `order` oe1_0 
        where
            oe1_0.user_id=? 
        order by
            oe1_0.create_time desc
2025-07-11 12:30:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 12:30:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oie1_0.id,
        oie1_0.order_id,
        oie1_0.price,
        oie1_0.product_id,
        oie1_0.quantity,
        oie1_0.refund_status 
    from
        order_item oie1_0 
    where
        oie1_0.order_id=?
2025-07-11 12:30:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        pe1_0.id,
        pe1_0.create_time,
        pe1_0.merchant_id,
        pe1_0.name,
        pe1_0.pic,
        pe1_0.price,
        pe1_0.status,
        pe1_0.stock,
        pe1_0.version 
    from
        product pe1_0 
    where
        pe1_0.id in (?, ?)
2025-07-11 12:30:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 12:30:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oie1_0.id,
        oie1_0.order_id,
        oie1_0.price,
        oie1_0.product_id,
        oie1_0.quantity,
        oie1_0.refund_status 
    from
        order_item oie1_0 
    where
        oie1_0.order_id=?
2025-07-11 12:30:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        pe1_0.id,
        pe1_0.create_time,
        pe1_0.merchant_id,
        pe1_0.name,
        pe1_0.pic,
        pe1_0.price,
        pe1_0.status,
        pe1_0.stock,
        pe1_0.version 
    from
        product pe1_0 
    where
        pe1_0.id in (?, ?)
2025-07-11 12:32:13 [http-nio-8080-exec-9] INFO  c.store.controller.OrderController - Creating order for user: 1
2025-07-11 12:32:13 [http-nio-8080-exec-9] INFO  com.store.service.OrderService - Creating order for user: 1
2025-07-11 12:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?) 
            and pe1_0.status='ON_SALE'
2025-07-11 12:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 12:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        `order` (
            create_time, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id
        ) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 12:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 12:32:13 [http-nio-8080-exec-9] INFO  com.store.service.OrderService - Order created successfully: ORD598733263598653440
2025-07-11 12:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 12:32:14 [kafka-producer-network-thread | producer-1] INFO  com.store.service.OrderService - Order created message sent successfully: ORD598733263598653440
2025-07-11 12:32:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:32:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:32:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:37:04 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-07-11 12:37:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:37:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:37:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:37:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 12:37:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 12:37:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 12:42:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:42:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:42:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:47:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:47:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:47:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:47:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 12:47:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 12:47:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 12:52:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:52:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:52:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:57:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 12:57:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 12:57:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 12:57:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 12:57:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 12:57:36 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 13:32:07 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=34m7s993ms).
2025-07-11 13:39:26 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7m18s892ms).
2025-07-11 13:41:25 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=59s674ms).
2025-07-11 13:43:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 13:43:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 13:43:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 13:46:31 [http-nio-8080-exec-8] INFO  c.store.controller.PaymentController - Processing payment for order: ORD598733263598653440
2025-07-11 13:46:31 [http-nio-8080-exec-8] INFO  com.store.service.PaymentService - Processing payment for order: ORD598733263598653440
2025-07-11 13:46:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 13:46:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 17 : {payment-failed=LEADER_NOT_AVAILABLE}
2025-07-11 13:46:33 [http-nio-8080-exec-8] ERROR com.store.service.PaymentService - Payment failed for order: ORD598733263598653440 - Insufficient funds
2025-07-11 13:46:33 [kafka-producer-network-thread | producer-1] INFO  com.store.service.PaymentService - Payment event sent successfully to topic: payment-failed
2025-07-11 13:48:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 13:48:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 13:48:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 13:48:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 13:48:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 13:48:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 13:48:59 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 89034 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 13:48:59 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:49:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 13:49:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 13:49:00 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 13:49:00 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 13:49:00 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 13:49:00 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 761 ms
2025-07-11 13:49:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 13:49:00 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@340c57e0
2025-07-11 13:49:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 13:49:06 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 13:49:06 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 13:49:06 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 13:49:06 [main] INFO  liquibase.util - Run:                          0
2025-07-11 13:49:06 [main] INFO  liquibase.util - Previously run:               8
2025-07-11 13:49:06 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 13:49:06 [main] INFO  liquibase.util - -------------------------------
2025-07-11 13:49:06 [main] INFO  liquibase.util - Total change sets:            8
2025-07-11 13:49:06 [main] INFO  liquibase.util - Update summary generated
2025-07-11 13:49:06 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 13:49:06 [main] INFO  liquibase.command - Command execution complete
2025-07-11 13:49:06 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 13:49:06 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 13:49:06 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 13:49:06 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 13:49:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 13:49:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 13:49:06 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 13:49:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 13:49:06 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 13:49:07 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 13:49:07 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 13:49:07 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 13:49:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 13:49:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 13:49:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752212947949
2025-07-11 13:49:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 13:49:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 13:49:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 13:49:08 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 13:49:08 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-07-11 13:49:08 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 13:49:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 13:49:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 13:49:08 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-11 13:49:08 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-11 13:50:27 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 89522 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 13:50:27 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 5 JPA repository interfaces.
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:50:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 13:50:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 13:50:27 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 13:50:27 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 13:50:27 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 13:50:27 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 812 ms
2025-07-11 13:50:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 13:50:28 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@38667005
2025-07-11 13:50:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 13:50:33 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 13:50:33 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 13:50:33 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 13:50:33 [main] INFO  liquibase.util - Run:                          0
2025-07-11 13:50:33 [main] INFO  liquibase.util - Previously run:               8
2025-07-11 13:50:33 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 13:50:33 [main] INFO  liquibase.util - -------------------------------
2025-07-11 13:50:33 [main] INFO  liquibase.util - Total change sets:            8
2025-07-11 13:50:33 [main] INFO  liquibase.util - Update summary generated
2025-07-11 13:50:33 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 13:50:33 [main] INFO  liquibase.command - Command execution complete
2025-07-11 13:50:33 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 13:50:33 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 13:50:33 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 13:50:33 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 13:50:33 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 13:50:33 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 13:50:34 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 13:50:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 13:50:34 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 13:50:34 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 13:50:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 13:50:35 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 13:50:35 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 13:50:35 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 13:50:35 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752213035268
2025-07-11 13:50:35 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 13:50:35 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 13:50:35 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 13:50:35 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 13:50:35 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-07-11 13:50:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 13:50:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 13:50:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 13:50:35 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-11 13:50:35 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-07-11 13:51:24 [lettuce-eventExecutorLoop-1-7] INFO  i.l.core.protocol.ConnectionWatchdog - Reconnecting, last destination was localhost/127.0.0.1:6379
2025-07-11 13:51:24 [lettuce-nioEventLoop-4-2] WARN  i.l.core.protocol.ConnectionWatchdog - Cannot reconnect to [localhost/<unresolved>:6379]: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:254)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-07-11 13:51:26 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:26 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:26 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 20 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-11 13:51:27 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 13:51:28 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 13:51:29 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 13:51:30 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 13:51:31 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 13:51:32 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 13:51:33 [lettuce-eventExecutorLoop-1-7] INFO  i.l.core.protocol.ConnectionWatchdog - Reconnecting, last destination was localhost/<unresolved>:6379
2025-07-11 13:51:33 [lettuce-nioEventLoop-4-2] WARN  i.l.core.protocol.ConnectionWatchdog - Cannot reconnect to [localhost/<unresolved>:6379]: Connection refused: localhost/127.0.0.1:6379
2025-07-11 13:51:33 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 13:51:34 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 13:51:35 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 13:51:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 13:51:36 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-07-11 13:51:36 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 13:51:36 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 13:51:36 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 13:51:36 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-07-11 13:51:36 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 13:51:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 13:51:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 13:54:13 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 90663 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 13:54:13 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 13:54:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 13:54:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 13:54:14 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 13:54:14 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 13:54:14 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 13:54:14 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 787 ms
2025-07-11 13:54:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 13:54:14 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@340c57e0
2025-07-11 13:54:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 13:54:20 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 13:54:20 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 13:54:20 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 13:54:20 [main] INFO  liquibase.util - Run:                          0
2025-07-11 13:54:20 [main] INFO  liquibase.util - Previously run:               8
2025-07-11 13:54:20 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 13:54:20 [main] INFO  liquibase.util - -------------------------------
2025-07-11 13:54:20 [main] INFO  liquibase.util - Total change sets:            8
2025-07-11 13:54:20 [main] INFO  liquibase.util - Update summary generated
2025-07-11 13:54:20 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 13:54:20 [main] INFO  liquibase.command - Command execution complete
2025-07-11 13:54:20 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 13:54:20 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 13:54:20 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 13:54:20 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 13:54:20 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 13:54:20 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 13:54:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 13:54:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 13:54:21 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 13:54:21 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 13:54:22 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 13:54:22 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 13:54:22 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 13:54:22 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 13:54:22 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752213262152
2025-07-11 13:54:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 13:54:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 13:54:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 13:54:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 13:54:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 13:54:22 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.737 seconds (process running for 8.887)
2025-07-11 13:54:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 13:54:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 13:54:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 13:54:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 13:54:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 13:54:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 13:54:22 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 13:54:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 13:54:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-11 13:59:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 13:59:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 13:59:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:04:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:04:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:04:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:04:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 14:04:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 14:04:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 14:09:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:09:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:09:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:14:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:14:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:14:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:14:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 14:14:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 14:14:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 14:19:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:19:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:19:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:24:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:24:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:24:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:24:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 14:24:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 14:24:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 14:29:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:29:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:29:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:34:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:34:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:34:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:34:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 14:34:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 14:34:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 14:39:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:39:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:39:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:44:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:44:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:44:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:44:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 14:44:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 14:44:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 14:49:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:49:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:49:22 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:51:29 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 14:51:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 14:51:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 14:53:23 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 3917 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 14:53:23 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 5 JPA repository interfaces.
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 14:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 14:53:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 14:53:24 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 14:53:24 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 14:53:24 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 14:53:24 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 739 ms
2025-07-11 14:53:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 14:53:24 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@129b69b2
2025-07-11 14:53:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 14:53:30 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 14:53:30 [main] WARN  liquibase.changelog - Due to mysql SQL limitations, modifyDataType will lose primary key/autoincrement/not null/comment settings explicitly redefined in the change. Use <sql> or <modifySql> to re-specify all configuration if this is the case
2025-07-11 14:53:30 [main] WARN  liquibase.changelog - Due to mysql SQL limitations, modifyDataType will lose primary key/autoincrement/not null/comment settings explicitly redefined in the change. Use <sql> or <modifySql> to re-specify all configuration if this is the case
2025-07-11 14:53:30 [main] INFO  liquibase.lockservice - Successfully acquired change log lock
2025-07-11 14:53:30 [main] INFO  liquibase.command - Using deploymentId: 2216810290
2025-07-11 14:53:30 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 14:53:30 [main] INFO  liquibase.changelog - user.password datatype was changed to varchar(60)
2025-07-11 14:53:30 [main] INFO  liquibase.changelog - ChangeSet db/changelog/changes/009-update-user-password-length.xml::009-update-user-password-length::store-system ran successfully in 32ms
2025-07-11 14:53:30 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 14:53:30 [main] INFO  liquibase.util - Run:                          1
2025-07-11 14:53:30 [main] INFO  liquibase.util - Previously run:               8
2025-07-11 14:53:30 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 14:53:30 [main] INFO  liquibase.util - -------------------------------
2025-07-11 14:53:30 [main] INFO  liquibase.util - Total change sets:            9
2025-07-11 14:53:30 [main] INFO  liquibase.util - Update summary generated
2025-07-11 14:53:30 [main] INFO  liquibase.command - Update command completed successfully.
2025-07-11 14:53:30 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 14:53:30 [main] INFO  liquibase.command - Command execution complete
2025-07-11 14:53:30 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 14:53:30 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 14:53:30 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 14:53:30 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 14:53:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 14:53:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 14:53:30 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 14:53:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 14:53:30 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 14:53:31 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 14:53:31 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 61e00ce6-5a28-421a-837d-a867de6f5302

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-07-11 14:53:31 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 14:53:31 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@169f4020, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@419e0ee5, org.springframework.security.web.context.SecurityContextHolderFilter@5d2ded, org.springframework.security.web.header.HeaderWriterFilter@6b52b254, org.springframework.web.filter.CorsFilter@6630e32d, org.springframework.security.web.authentication.logout.LogoutFilter@61ffe4cf, com.store.security.JwtAuthenticationFilter@4ecd8ab1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3cd38685, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5811cf52, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c2aa4db, org.springframework.security.web.session.SessionManagementFilter@25b20814, org.springframework.security.web.access.ExceptionTranslationFilter@486417fc, org.springframework.security.web.access.intercept.AuthorizationFilter@17675c2f]
2025-07-11 14:53:31 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 14:53:31 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 14:53:31 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 14:53:31 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752216811939
2025-07-11 14:53:32 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 14:53:32 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 14:53:32 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 14:53:32 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 14:53:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 14:53:32 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.311 seconds (process running for 8.469)
2025-07-11 14:53:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:53:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:53:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 14:53:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 14:53:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 14:53:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 14:53:32 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 14:53:32 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 14:53:32 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-11 14:53:32 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/actuator/prometheus' (previous null). Performing CorsConfiguration lookup. This is logged once only at WARN level, and every time at TRACE.
2025-07-11 14:53:32 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/actuator/prometheus' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-07-11 14:54:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id 
    from
        user ue1_0 
    where
        ue1_0.login_name=? 
    limit
        ?
2025-07-11 14:54:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id 
    from
        user ue1_0 
    where
        ue1_0.email=? 
    limit
        ?
2025-07-11 14:54:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.UserEntity */insert 
    into
        user (create_time, email, login_name, name, password, phone) 
    values
        (?, ?, ?, ?, ?, ?)
2025-07-11 14:55:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 14:56:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 14:56:35 [http-nio-8080-exec-3] INFO  c.store.controller.OrderController - Creating order for user: 3
2025-07-11 14:56:35 [http-nio-8080-exec-3] INFO  com.store.service.OrderService - Creating order for user: 3
2025-07-11 14:56:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 14:56:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 14:56:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 14:56:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 14:56:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 14:56:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        `order` (
            create_time, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id
        ) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 14:56:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 14:56:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 14:56:35 [http-nio-8080-exec-3] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 10
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 1000
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-07-11 14:56:35 [http-nio-8080-exec-3] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-07-11 14:56:35 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 14:56:35 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 14:56:35 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752216995574
2025-07-11 14:56:35 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: LP5EO4VfSnyZgbfCYGNwrg
2025-07-11 14:56:35 [http-nio-8080-exec-3] INFO  com.store.service.OrderService - Order created successfully: ORD598769591992324096
2025-07-11 14:56:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 14:56:35 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1000 with epoch 0
2025-07-11 14:56:35 [kafka-producer-network-thread | producer-1] INFO  com.store.service.OrderService - Order created message sent successfully: ORD598769591992324096
2025-07-11 14:58:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 14:58:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 14:58:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:00:28 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-07-11 15:00:28 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:28 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight METADATA request with correlation id 5 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2025-07-11 15:00:29 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:30 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:31 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:32 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:33 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:34 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:35 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:36 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:38 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:39 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:40 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:41 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:42 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:43 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:44 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:45 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:46 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:47 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:48 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:49 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:51 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:52 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:53 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:54 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:55 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:56 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:57 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:58 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2025-07-11 15:00:59 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:00:59 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 6 due to node 1 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2025-07-11 15:01:00 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:01:00 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 7 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-11 15:01:01 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-07-11 15:01:01 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 8 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2025-07-11 15:03:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:03:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:03:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:03:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 15:03:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 15:03:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 15:08:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:08:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:08:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:13:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:13:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:13:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:13:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 15:13:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 15:13:32 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 15:15:02 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-07-11 15:15:02 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 15:15:02 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 15:15:02 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 15:15:02 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-07-11 15:15:02 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 15:15:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 15:15:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 15:15:06 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 10751 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 15:15:06 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 5 JPA repository interfaces.
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 15:15:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 15:15:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 15:15:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 15:15:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 15:15:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 15:15:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 827 ms
2025-07-11 15:15:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 15:15:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4cd5fc46
2025-07-11 15:15:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 15:15:13 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 15:15:13 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 15:15:13 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 15:15:13 [main] INFO  liquibase.util - Run:                          0
2025-07-11 15:15:13 [main] INFO  liquibase.util - Previously run:               9
2025-07-11 15:15:13 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 15:15:13 [main] INFO  liquibase.util - -------------------------------
2025-07-11 15:15:13 [main] INFO  liquibase.util - Total change sets:            9
2025-07-11 15:15:13 [main] INFO  liquibase.util - Update summary generated
2025-07-11 15:15:13 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 15:15:13 [main] INFO  liquibase.command - Command execution complete
2025-07-11 15:15:13 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 15:15:13 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 15:15:13 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 15:15:13 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 15:15:13 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 15:15:13 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 15:15:14 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 15:15:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 15:15:14 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 15:15:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 15:15:14 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 079a0b36-dc29-4632-a873-06cd3ff22744

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-07-11 15:15:14 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 15:15:14 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5c10b993, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@607624b7, org.springframework.security.web.context.SecurityContextHolderFilter@1dba2100, org.springframework.security.web.header.HeaderWriterFilter@4b1812a8, org.springframework.web.filter.CorsFilter@226451a2, org.springframework.security.web.authentication.logout.LogoutFilter@144a750f, com.store.security.JwtAuthenticationFilter@56d822dc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@798673ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@35e1c910, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@28f95943, org.springframework.security.web.session.SessionManagementFilter@3ca57afe, org.springframework.security.web.access.ExceptionTranslationFilter@136cb5b5, org.springframework.security.web.access.intercept.AuthorizationFilter@2e3abc3b]
2025-07-11 15:15:15 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 15:15:15 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 15:15:15 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 15:15:15 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752218115238
2025-07-11 15:15:15 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 15:15:15 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 15:15:15 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 15:15:15 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 15:15:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 15:15:15 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.57 seconds (process running for 8.708)
2025-07-11 15:15:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:15:15 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:15:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:15:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 15:15:15 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 15:15:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 15:15:22 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 15:15:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 15:15:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-11 15:15:22 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/actuator/prometheus' (previous null). Performing CorsConfiguration lookup. This is logged once only at WARN level, and every time at TRACE.
2025-07-11 15:15:22 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/actuator/prometheus' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-07-11 15:19:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id 
    from
        user ue1_0 
    where
        ue1_0.login_name=? 
    limit
        ?
2025-07-11 15:20:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:20:15 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:20:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:20:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id 
    from
        user ue1_0 
    where
        ue1_0.login_name=? 
    limit
        ?
2025-07-11 15:20:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id 
    from
        user ue1_0 
    where
        ue1_0.email=? 
    limit
        ?
2025-07-11 15:20:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id 
    from
        user ue1_0 
    where
        ue1_0.login_name=? 
    limit
        ?
2025-07-11 15:20:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id 
    from
        user ue1_0 
    where
        ue1_0.email=? 
    limit
        ?
2025-07-11 15:20:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.UserEntity */insert 
    into
        user (create_time, email, login_name, name, password, phone) 
    values
        (?, ?, ?, ?, ?, ?)
2025-07-11 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 15:21:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 15:22:13 [http-nio-8080-exec-3] INFO  c.store.controller.OrderController - Creating order for user: 3
2025-07-11 15:22:13 [http-nio-8080-exec-3] INFO  com.store.service.OrderService - Creating order for user: 3
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        `order` (
            create_time, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id
        ) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderMessageEntity */insert 
    into
        order_message (create_time, last_retry_time, payload, retry_count, status, topic) 
    values
        (?, ?, ?, ?, ?, ?)
2025-07-11 15:22:13 [http-nio-8080-exec-3] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 10
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 1000
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-07-11 15:22:13 [http-nio-8080-exec-3] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-07-11 15:22:13 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 15:22:13 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 15:22:13 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752218533552
2025-07-11 15:22:13 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: LP5EO4VfSnyZgbfCYGNwrg
2025-07-11 15:22:13 [http-nio-8080-exec-3] INFO  com.store.service.OrderService - Order created successfully: ORD598776042982871040
2025-07-11 15:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 15:22:13 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 2000 with epoch 0
2025-07-11 15:22:13 [kafka-producer-network-thread | producer-1] INFO  com.store.service.OrderService - Order created message sent successfully: ORD598776042982871040
2025-07-11 15:22:13 [kafka-producer-network-thread | producer-1] DEBUG org.hibernate.SQL - 
    select
        ome1_0.id,
        ome1_0.create_time,
        ome1_0.last_retry_time,
        ome1_0.payload,
        ome1_0.retry_count,
        ome1_0.status,
        ome1_0.topic 
    from
        order_message ome1_0 
    where
        ome1_0.id=?
2025-07-11 15:22:13 [kafka-producer-network-thread | producer-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.OrderMessageEntity */update order_message 
    set
        create_time=?,
        last_retry_time=?,
        payload=?,
        retry_count=?,
        status=?,
        topic=? 
    where
        id=?
2025-07-11 15:24:12 [http-nio-8080-exec-7] INFO  c.store.controller.PaymentController - Processing payment for order: ORD123456789 by user: alice
2025-07-11 15:24:12 [http-nio-8080-exec-7] INFO  com.store.service.PaymentService - Processing payment for order: ORD123456789
2025-07-11 15:24:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 15:24:12 [http-nio-8080-exec-7] ERROR c.store.controller.PaymentController - Invalid payment request: Order not found: ORD123456789
2025-07-11 15:24:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 15:25:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:25:15 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:25:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:25:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 15:25:15 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 15:25:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 15:26:17 [http-nio-8080-exec-3] INFO  c.store.controller.PaymentController - Processing payment for order: <ORDER_CODE> by user: alice
2025-07-11 15:26:17 [http-nio-8080-exec-3] INFO  com.store.service.PaymentService - Processing payment for order: <ORDER_CODE>
2025-07-11 15:26:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 15:26:17 [http-nio-8080-exec-3] ERROR c.store.controller.PaymentController - Invalid payment request: Order not found: <ORDER_CODE>
2025-07-11 15:26:53 [http-nio-8080-exec-9] INFO  c.store.controller.PaymentController - Processing payment for order: <ORDER_CODE> by user: alice
2025-07-11 15:26:53 [http-nio-8080-exec-9] INFO  com.store.service.PaymentService - Processing payment for order: <ORDER_CODE>
2025-07-11 15:26:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 15:26:53 [http-nio-8080-exec-9] ERROR c.store.controller.PaymentController - Invalid payment request: Order not found: <ORDER_CODE>
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 15:28:56 [http-nio-8080-exec-2] INFO  c.store.controller.OrderController - Creating order for user: 3
2025-07-11 15:28:56 [http-nio-8080-exec-2] INFO  com.store.service.OrderService - Creating order for user: 3
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        `order` (
            create_time, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id
        ) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderMessageEntity */insert 
    into
        order_message (create_time, last_retry_time, payload, retry_count, status, topic) 
    values
        (?, ?, ?, ?, ?, ?)
2025-07-11 15:28:56 [http-nio-8080-exec-2] INFO  com.store.service.OrderService - Order created successfully: ORD598777733908140032
2025-07-11 15:28:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 15:28:56 [kafka-producer-network-thread | producer-1] INFO  com.store.service.OrderService - Order created message sent successfully: ORD598777733908140032
2025-07-11 15:28:56 [kafka-producer-network-thread | producer-1] DEBUG org.hibernate.SQL - 
    select
        ome1_0.id,
        ome1_0.create_time,
        ome1_0.last_retry_time,
        ome1_0.payload,
        ome1_0.retry_count,
        ome1_0.status,
        ome1_0.topic 
    from
        order_message ome1_0 
    where
        ome1_0.id=?
2025-07-11 15:28:56 [kafka-producer-network-thread | producer-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.OrderMessageEntity */update order_message 
    set
        create_time=?,
        last_retry_time=?,
        payload=?,
        retry_count=?,
        status=?,
        topic=? 
    where
        id=?
2025-07-11 15:29:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 15:29:28 [http-nio-8080-exec-8] INFO  c.store.controller.OrderController - Creating order for user: 3
2025-07-11 15:29:28 [http-nio-8080-exec-8] INFO  com.store.service.OrderService - Creating order for user: 3
2025-07-11 15:29:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 15:29:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 15:29:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 15:29:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 15:29:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 15:29:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        `order` (
            create_time, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id
        ) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 15:29:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 15:29:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 15:29:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderMessageEntity */insert 
    into
        order_message (create_time, last_retry_time, payload, retry_count, status, topic) 
    values
        (?, ?, ?, ?, ?, ?)
2025-07-11 15:29:28 [http-nio-8080-exec-8] INFO  com.store.service.OrderService - Order created successfully: ORD598777866024521728
2025-07-11 15:29:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 15:29:28 [kafka-producer-network-thread | producer-1] INFO  com.store.service.OrderService - Order created message sent successfully: ORD598777866024521728
2025-07-11 15:29:28 [kafka-producer-network-thread | producer-1] DEBUG org.hibernate.SQL - 
    select
        ome1_0.id,
        ome1_0.create_time,
        ome1_0.last_retry_time,
        ome1_0.payload,
        ome1_0.retry_count,
        ome1_0.status,
        ome1_0.topic 
    from
        order_message ome1_0 
    where
        ome1_0.id=?
2025-07-11 15:29:28 [kafka-producer-network-thread | producer-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.OrderMessageEntity */update order_message 
    set
        create_time=?,
        last_retry_time=?,
        payload=?,
        retry_count=?,
        status=?,
        topic=? 
    where
        id=?
2025-07-11 15:30:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:30:15 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:30:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:30:43 [http-nio-8080-exec-8] INFO  c.store.controller.PaymentController - Processing payment for order: ORD598777733908140032 by user: alice
2025-07-11 15:30:43 [http-nio-8080-exec-8] INFO  com.store.service.PaymentService - Processing payment for order: ORD598777733908140032
2025-07-11 15:30:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 15:30:44 [http-nio-8080-exec-8] INFO  com.store.service.PaymentService - Payment processed successfully for order: ORD598777733908140032
2025-07-11 15:30:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.OrderEntity */update `order` 
    set
        create_time=?,
        merchant_id=?,
        order_code=?,
        pay_time=?,
        status=?,
        total_amount=?,
        tracking_no=?,
        user_id=? 
    where
        id=?
2025-07-11 15:30:44 [kafka-producer-network-thread | producer-1] INFO  com.store.service.PaymentService - Payment event sent successfully to topic: payment-processed
2025-07-11 15:31:14 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-07-11 15:31:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order-created-0 to 0 since the associated topicId changed from null to vXFwNEruT_2-kNwJgDpT1Q
2025-07-11 15:31:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order-created-1 to 0 since the associated topicId changed from null to vXFwNEruT_2-kNwJgDpT1Q
2025-07-11 15:31:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order-created-2 to 0 since the associated topicId changed from null to vXFwNEruT_2-kNwJgDpT1Q
2025-07-11 15:35:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:35:15 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:35:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:35:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 15:35:15 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 15:35:15 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 15:38:43 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-07-11 15:38:43 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 15:38:43 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 15:38:43 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 15:38:43 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-07-11 15:38:43 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 15:38:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 15:38:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 15:38:47 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 19206 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 15:38:47 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 5 JPA repository interfaces.
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 15:38:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-07-11 15:38:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 15:38:47 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 15:38:47 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 15:38:47 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 15:38:47 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 674 ms
2025-07-11 15:38:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 15:38:48 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@51141f64
2025-07-11 15:38:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 15:38:53 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 15:38:53 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 15:38:53 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 15:38:53 [main] INFO  liquibase.util - Run:                          0
2025-07-11 15:38:53 [main] INFO  liquibase.util - Previously run:               9
2025-07-11 15:38:53 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 15:38:53 [main] INFO  liquibase.util - -------------------------------
2025-07-11 15:38:53 [main] INFO  liquibase.util - Total change sets:            9
2025-07-11 15:38:53 [main] INFO  liquibase.util - Update summary generated
2025-07-11 15:38:53 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 15:38:53 [main] INFO  liquibase.command - Command execution complete
2025-07-11 15:38:53 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 15:38:53 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 15:38:53 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 15:38:53 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 15:38:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 15:38:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 15:38:53 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 15:38:53 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 15:38:54 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 15:38:54 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 15:38:54 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 4d806986-0e95-41f5-9f2b-b7bab2fd95e8

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-07-11 15:38:54 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 15:38:54 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@466b4a28, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a277ae5, org.springframework.security.web.context.SecurityContextHolderFilter@5d948005, org.springframework.security.web.header.HeaderWriterFilter@664724e7, org.springframework.web.filter.CorsFilter@2ca0c62f, org.springframework.security.web.authentication.logout.LogoutFilter@5f85e7e9, com.store.security.JwtAuthenticationFilter@7ea3839e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4c7c6582, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f7de2d4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7006e4c6, org.springframework.security.web.session.SessionManagementFilter@5e274c4, org.springframework.security.web.access.ExceptionTranslationFilter@4a3306c2, org.springframework.security.web.access.intercept.AuthorizationFilter@5fe22903]
2025-07-11 15:38:54 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 15:38:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 15:38:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 15:38:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752219534982
2025-07-11 15:38:55 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 15:38:55 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 15:38:55 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 15:38:55 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 15:38:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 15:38:55 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.045 seconds (process running for 8.165)
2025-07-11 15:38:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:38:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:38:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:38:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 15:38:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 15:38:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 15:39:02 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 15:39:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 15:39:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-11 15:39:02 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/actuator/prometheus' (previous null). Performing CorsConfiguration lookup. This is logged once only at WARN level, and every time at TRACE.
2025-07-11 15:39:02 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/actuator/prometheus' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-07-11 15:39:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 15:39:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.create_time,
        ue1_0.email,
        ue1_0.login_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone 
    from
        user ue1_0 
    where
        ue1_0.login_name=?
2025-07-11 15:40:07 [http-nio-8080-exec-1] INFO  c.store.controller.OrderController - Creating order for user: 3
2025-07-11 15:40:07 [http-nio-8080-exec-1] INFO  com.store.service.OrderService - Creating order for user: 3
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id IN :productIds 
        AND p.status = 'ON_SALE' */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id in (?, ?) 
            and pe1_0.status='ON_SALE'
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        ProductEntity p 
    WHERE
        p.id = :id */ select
            pe1_0.id,
            pe1_0.create_time,
            pe1_0.merchant_id,
            pe1_0.name,
            pe1_0.pic,
            pe1_0.price,
            pe1_0.status,
            pe1_0.stock,
            pe1_0.version 
        from
            product pe1_0 
        where
            pe1_0.id=? for update
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderEntity */insert 
    into
        `order` (
            create_time, merchant_id, order_code, pay_time, status, total_amount, tracking_no, user_id
        ) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderItemEntity */insert 
    into
        order_item (order_id, price, product_id, quantity, refund_status) 
    values
        (?, ?, ?, ?, ?)
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderMessageEntity */insert 
    into
        order_message (create_time, last_retry_time, payload, retry_count, status, topic) 
    values
        (?, ?, ?, ?, ?, ?)
2025-07-11 15:40:07 [http-nio-8080-exec-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 10
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 1000
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-07-11 15:40:07 [http-nio-8080-exec-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-07-11 15:40:07 [http-nio-8080-exec-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 15:40:07 [http-nio-8080-exec-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 15:40:07 [http-nio-8080-exec-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752219607700
2025-07-11 15:40:07 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: LP5EO4VfSnyZgbfCYGNwrg
2025-07-11 15:40:07 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 2001 with epoch 0
2025-07-11 15:40:07 [http-nio-8080-exec-1] INFO  com.store.service.OrderService - Order created successfully: ORD598780547929608192
2025-07-11 15:40:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.ProductEntity */update product 
    set
        create_time=?,
        merchant_id=?,
        name=?,
        pic=?,
        price=?,
        status=?,
        stock=?,
        version=? 
    where
        id=? 
        and version=?
2025-07-11 15:40:07 [kafka-producer-network-thread | producer-1] INFO  com.store.service.OrderService - Order created message sent successfully: ORD598780547929608192
2025-07-11 15:40:07 [kafka-producer-network-thread | producer-1] DEBUG org.hibernate.SQL - 
    select
        ome1_0.id,
        ome1_0.create_time,
        ome1_0.last_retry_time,
        ome1_0.payload,
        ome1_0.retry_count,
        ome1_0.status,
        ome1_0.topic 
    from
        order_message ome1_0 
    where
        ome1_0.id=?
2025-07-11 15:40:07 [kafka-producer-network-thread | producer-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.OrderMessageEntity */update order_message 
    set
        create_time=?,
        last_retry_time=?,
        payload=?,
        retry_count=?,
        status=?,
        topic=? 
    where
        id=?
2025-07-11 15:41:01 [http-nio-8080-exec-9] INFO  c.store.controller.PaymentController - Processing payment for order: ORD598780547929608192 by user: alice
2025-07-11 15:41:01 [http-nio-8080-exec-9] INFO  com.store.service.PaymentService - Processing payment for order: ORD598780547929608192
2025-07-11 15:41:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        oe1_0.id,
        oe1_0.create_time,
        oe1_0.merchant_id,
        oe1_0.order_code,
        oe1_0.pay_time,
        oe1_0.status,
        oe1_0.total_amount,
        oe1_0.tracking_no,
        oe1_0.user_id 
    from
        `order` oe1_0 
    where
        oe1_0.order_code=?
2025-07-11 15:41:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.store.entity.OrderMessageEntity */insert 
    into
        order_message (create_time, last_retry_time, payload, retry_count, status, topic) 
    values
        (?, ?, ?, ?, ?, ?)
2025-07-11 15:41:02 [http-nio-8080-exec-9] INFO  com.store.service.PaymentService - Payment processed successfully for order: ORD598780547929608192
2025-07-11 15:41:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.OrderEntity */update `order` 
    set
        create_time=?,
        merchant_id=?,
        order_code=?,
        pay_time=?,
        status=?,
        total_amount=?,
        tracking_no=?,
        user_id=? 
    where
        id=?
2025-07-11 15:41:02 [kafka-producer-network-thread | producer-1] INFO  com.store.service.PaymentService - Payment event sent successfully to topic: payment-processed
2025-07-11 15:41:02 [kafka-producer-network-thread | producer-1] DEBUG org.hibernate.SQL - 
    select
        ome1_0.id,
        ome1_0.create_time,
        ome1_0.last_retry_time,
        ome1_0.payload,
        ome1_0.retry_count,
        ome1_0.status,
        ome1_0.topic 
    from
        order_message ome1_0 
    where
        ome1_0.id=?
2025-07-11 15:41:02 [kafka-producer-network-thread | producer-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.store.entity.OrderMessageEntity */update order_message 
    set
        create_time=?,
        last_retry_time=?,
        payload=?,
        retry_count=?,
        status=?,
        topic=? 
    where
        id=?
2025-07-11 15:43:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:43:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:43:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:48:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:48:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:48:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:48:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 15:48:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 15:48:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 15:49:07 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-07-11 15:53:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:53:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:53:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:58:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 15:58:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 15:58:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 15:58:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 15:58:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 15:58:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 16:03:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:03:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:03:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:08:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:08:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:08:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:08:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 16:08:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 16:08:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 16:13:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:13:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:13:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:18:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:18:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:18:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:18:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 16:18:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 16:18:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 16:23:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:23:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:23:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:28:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:28:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:28:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:28:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 16:28:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 16:28:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 16:33:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:33:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:33:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:38:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:38:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:38:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:38:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 16:38:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 16:38:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 16:43:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:43:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:43:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:48:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:48:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:48:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:48:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 16:48:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 16:48:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 16:53:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:53:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:53:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:58:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 16:58:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 16:58:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 16:58:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 16:58:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 16:58:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 17:03:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 17:03:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 17:03:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 17:08:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 17:08:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 17:08:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 17:08:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 17:08:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 17:08:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 17:13:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 17:13:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 17:13:55 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 17:15:40 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-07-11 17:15:40 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 17:15:40 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 17:15:40 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 17:15:40 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-07-11 17:15:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 17:15:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 17:15:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 17:15:43 [main] INFO  com.store.StoreApplication - Starting StoreApplication using Java 23.0.2 with PID 39260 (/Users/bowen/store/target/classes started by bowen in /Users/bowen/store)
2025-07-11 17:15:43 [main] INFO  com.store.StoreApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 5 JPA repository interfaces.
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.store.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 17:15:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-11 17:15:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-11 17:15:44 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 17:15:44 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 17:15:44 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 17:15:44 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 736 ms
2025-07-11 17:15:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 17:15:44 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@d13379e
2025-07-11 17:15:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 17:15:50 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 17:15:50 [main] INFO  liquibase.changelog - Reading from store_db.DATABASECHANGELOG
2025-07-11 17:15:50 [main] INFO  liquibase.util - UPDATE SUMMARY
2025-07-11 17:15:50 [main] INFO  liquibase.util - Run:                          0
2025-07-11 17:15:50 [main] INFO  liquibase.util - Previously run:               9
2025-07-11 17:15:50 [main] INFO  liquibase.util - Filtered out:                 0
2025-07-11 17:15:50 [main] INFO  liquibase.util - -------------------------------
2025-07-11 17:15:50 [main] INFO  liquibase.util - Total change sets:            9
2025-07-11 17:15:50 [main] INFO  liquibase.util - Update summary generated
2025-07-11 17:15:50 [main] INFO  liquibase.lockservice - Successfully released change log lock
2025-07-11 17:15:50 [main] INFO  liquibase.command - Command execution complete
2025-07-11 17:15:50 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 17:15:50 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 17:15:50 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 17:15:50 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 17:15:50 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 17:15:50 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 17:15:50 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 17:15:50 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 17:15:50 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-11 17:15:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 17:15:51 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 6ee4f8be-4643-4293-8128-33806ef900b7

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-07-11 17:15:51 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-11 17:15:51 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@74715fcd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b6e7dc9, org.springframework.security.web.context.SecurityContextHolderFilter@7f7de2d4, org.springframework.security.web.header.HeaderWriterFilter@475c02b5, org.springframework.web.filter.CorsFilter@9bf1e99, org.springframework.security.web.authentication.logout.LogoutFilter@5ce59857, com.store.security.JwtAuthenticationFilter@7ea3839e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63bbddd5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b2ac950, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b7694aa, org.springframework.security.web.session.SessionManagementFilter@274f16c7, org.springframework.security.web.access.ExceptionTranslationFilter@664724e7, org.springframework.security.web.access.intercept.AuthorizationFilter@3d0175d7]
2025-07-11 17:15:51 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-07-11 17:15:51 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
2025-07-11 17:15:51 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
2025-07-11 17:15:51 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752225351978
2025-07-11 17:15:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-07-11 17:15:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-07-11 17:15:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-07-11 17:15:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-07-11 17:15:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-07-11 17:15:52 [main] INFO  com.store.StoreApplication - Started StoreApplication in 8.424 seconds (process running for 8.557)
2025-07-11 17:15:52 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting retry process for failed messages
2025-07-11 17:15:52 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'FAILED' 
        AND om.retryCount < :maxRetryCount 
        AND (
            om.lastRetryTime IS NULL 
            OR om.lastRetryTime < :retryBefore
        ) */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='FAILED' 
            and ome1_0.retry_count<? 
            and (
                ome1_0.last_retry_time is null 
                or ome1_0.last_retry_time<?
            )
2025-07-11 17:15:52 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 failed messages to retry
2025-07-11 17:15:52 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Starting timeout process for pending messages
2025-07-11 17:15:52 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        om 
    FROM
        OrderMessageEntity om 
    WHERE
        om.status = 'PENDING' 
        AND om.createTime < :timeoutBefore */ select
            ome1_0.id,
            ome1_0.create_time,
            ome1_0.last_retry_time,
            ome1_0.payload,
            ome1_0.retry_count,
            ome1_0.status,
            ome1_0.topic 
        from
            order_message ome1_0 
        where
            ome1_0.status='PENDING' 
            and ome1_0.create_time<?
2025-07-11 17:15:52 [scheduling-1] INFO  c.s.service.OrderMessageRetryService - Found 0 pending messages to timeout
2025-07-11 17:15:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 17:15:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 17:15:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-11 17:15:52 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/actuator/prometheus' (previous null). Performing CorsConfiguration lookup. This is logged once only at WARN level, and every time at TRACE.
2025-07-11 17:15:52 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/actuator/prometheus' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
